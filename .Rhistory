xmlSApply(doc[[1]], xmlValue)
tmp <- xmlSApply(doc, function(x) xmlSApply(x, xmlValue))
tmp
tmp <- t(tmp)
tmp
names(tmp)
names(tmp[1])
names(tmp[[1])
names(tmp[[1]])
names(doc[[1]])
df <- tmp[ , c("person_pk", "first_name", "middle_name", "last_name", "gender", "current_grade", "homeroom_teacher_name")]
df
head(df)
df <- as.data.frame(df)
table(df$gender)
dim(df)
df$gender <- factor(df$gender)
df$gender <- factor(as.character(df$gender))
table(df$gender)
vcdata <- getURL("https://up.up_south_boston:GBtMZWCBSt@api.veracross.com/up_south_boston/v1/students.xml?option=0",
verbose=T,
ssl.verifypeer = FALSE,
cainfo = "C:/Users/rknight/Documents/R/win-library/3.0/RCurl/CurlSSL/curl-ca-bundle.crt")
vcdata <- getURL("https://up.up_south_boston:GBtMZWCBSt@api.veracross.com/up_south_boston/v1/students.xml?option=0",
verbose=T,
cainfo = "C:/Users/rknight/Documents/R/win-library/3.0/RCurl/CurlSSL/curl-ca-bundle.crt")
vcdata <- getURL("https://up.up_south_boston:GBtMZWCBSt@api.veracross.com/up_south_boston/v1/students.xml?option=0",
verbose=T,
cainfo = "C:/Users/rknight/Documents/R/win-library/3.0/RCurl/CurlSSL/curl-ca-bundle.crt")
require("RCurl")
require("XML")
vcdata <- getURL("https://up.up_south_boston:GBtMZWCBSt@api.veracross.com/up_south_boston/v1/students.xml?option=0",
verbose=T,
cainfo = "C:/Users/rknight/Documents/R/win-library/3.0/RCurl/CurlSSL/curl-ca-bundle.crt")
a
install.packages("Rserve")
library(Rserve)
install.packages("tidyr")
update.packages()
update.packages
update.packages()
require(dplyr)
require(tidyr)
gather
gather_
require(dplyr)
options(stringsAsFactors = F)
mcas <- read.csv("C:/Dropbox (UP Education Network)/UP-Data Evaluation/Sacred Data/MCAS")
mcas <- read.csv("C:/Dropbox (UP Education Network)/UP-Data Evaluation/Sacred Data/MCAS")
mcas <- read.csv("C:/Dropbox (UP Education Network)/UP-Data Evaluation/Sacred Data/MCAS/MCAS all schools all grades 2010-2013.csv")
head(mcas)
mcas$SGP <- as.numeric(mcas$SGP)
mcas$PA.perc <- as.numeric(mcas$P.A...1)
head(mcas)
mcas <- arrange(mcas, Org.Code, Subject, Year)
head(mcas)
ela.diff <- mcas %<%
select(Subject = "ELA") %.%
group_by(Org.Code) %.%
summarise(ela.diff = diff(PA.perc),
ela.sgp.diff = diff(SGP)))
ela.diff <- mcas %<%
select(Subject = "ELA") %.%
group_by(Org.Code) %.%
summarise(ela.diff = diff(PA.perc),
ela.sgp.diff = diff(SGP))
ela.diff <- mcas %.%
select(Subject = "ELA") %.%
group_by(Org.Code) %.%
summarise(ela.diff = diff(PA.perc),
ela.sgp.diff = diff(SGP))
ela.diff <- mcas %.%
filter(Subject = "ELA") %.%
group_by(Org.Code) %.%
summarise(ela.diff = diff(PA.perc),
ela.sgp.diff = diff(SGP))
ela.diff <- mcas %.%
filter(Subject == "ELA") %.%
group_by(Org.Code) %.%
summarise(ela.diff = diff(PA.perc),
ela.sgp.diff = diff(SGP))
ela.diff <- mcas %.%
filter(Subject == "ELA") %.%
group_by(Org.Code) %.%
summarise(ela.diff = diff(PA.perc))
ela.diff <- mcas %.%
group_by(Org.Code) %.%
filter(Subject == "ELA") %.%
summarise(ela.diff = diff(PA.perc))
ela.diff <- mcas %.%
group_by(Org.Code) %.%
filter(Subject == "ELA")
head(mcas)
ela.diff <- mcas %.%
group_by(Org.Code) %.%
filter(Subject == "ELA") %.%
summarise(ela.diff = diff(PA.perc, lag=1))
ela.diff <- mcas %.%
group_by(Org.Code) %.%
filter(Subject == "ELA") %.%
summarise(ela.diff = c(0,diff(PA.perc, lag=1))
ela.diff <- mcas %.%
group_by(Org.Code) %.%
filter(Subject == "ELA") %.%
summarise(ela.diff = c(0,diff(PA.perc, lag=1)))
ela.diff <- mcas %.%
group_by(Org.Code) %.%
filter(Subject == "ELA") %.%
summarise(ela.diff = PA.perc- lag(PA.perc, default=PA.perc[0]))
ela.diff <- mcas %.%
group_by(Org.Code) %.%
filter(Subject == "ELA") %.%
summarise(ela.diff = PA.perc- lag(PA.perc))
ela.diff <- mcas %.%
group_by(Org.Code) %.%
filter(Subject == "ELA") %.%
summarise(ela.diff = sum(PA.perc))
head(ela.diff)
ela.diff <- mcas %.%
group_by(Org.Code) %.%
filter(Subject == "ELA") %.%
mutate(ela.diff = PA.perc -lag(PA.perc))
head(ela.diff)
View(ela.diff)
write.csv(ela.diff, file="C:/Dropbox (UP Education Network)/UP-Data Evaluation/Working Folder/Temp", row.names = F)
write.csv(ela.diff, file="C:/Dropbox (UP Education Network)/UP-Data Evaluation/Working Folder/Temp/mcas ela differences.csv", row.names = F)
update.packages()
require(dplyr)
dlyr
dplyr
update.packages()
update.packages("dplyr")
install.packages('dplyr')
install.packages("dplyr")
install.packages('Lahman', 'nycflights13')
options(stringsAsFactors = F)
require(tidyr)
require(dplyr)
loc <- "C:/Dropbox (UP)/UP-Data Evaluation/UP Data Sources/Staff Surveys/FY15/Planning/Data Analysis"
raw <- read.csv(paste(loc, "/Beginning of Year Survey group 1.csv", sep = ""))
long <- raw %>%
gather(KEY, opening-satisfaction:thanks-comments)
names(raw)
long <- raw %>%
gather(KEY, opening-satisfaction:thanks-comments)
long <- raw %>%
gather(KEY, opening.satisfaction:thanks.comments)
long <- raw %>%
gather(KEY, response, opening.satisfaction:thanks.comments)
head(long)
long <- raw %>%
gather(question, response, opening.satisfaction:thanks.comments)
head(long)
long <- raw %>%
gather(question, response, opening.satisfaction:thanks.comments) %>%
separate(question, c("section", "quest"), sep = ".")
head(long)
long <- separate(question, c("section", "quest"), sep = ".")
long <- separate(raw, question, c("section", "quest"), sep = ".")
head(long)
long <- separate(raw, question, c("section", "quest"), sep = "/.")
long <- separate(raw, question, c("section", "quest"), sep = "\.")
long <- separate(raw, question, into = 2)
long <- separate(long, question, into = 2)
table(long$quest)
names(long)
long <- separate(long, question, into = 2)
long <- separate(long, question, sep = "\.")
long <- separate(long, question, sep = ".\")
long <- separate(long, question, sep = "\.")
long <- separate(long, question, sep = "\.")
iris
temp <- iris %<% gather(measure, value, Sepal.Length:Petal.Width)
temp <- iris %>% gather(measure, value, Sepal.Length:Petal.Width)
head(temp)
separate(temp, measure)
separate(temp, measure, sep = ".")
separate(temp, measure, into=2)
separate(temp, measure, c("type", "attribute") )
separate(temp, measure, c("type", "attribute"), sep = "/." )
separate(temp, measure, c("type", "attribute"), sep = "\." )
separate(temp, measure, c("type", "attribute"), sep = "." )
asdf<-data.frame(a.b = runif(10), c.d=runif(10))
asdf<-data.frame(a.b_e = runif(10), c.d_e =runif(10))
temp <- gather( asdf, measure, value, a.b_e:c.d_e)
head(temp)
separate(temp, measure, c("class", "type"))
separate(temp, measure, c("class", "type"), sep = "_")
separate(temp, measure, c("class", "type"), sep = ".")
separate(temp, measure, c("class", "type"), sep = "\.")
separate(temp, measure, c("class", "type"), sep = "\\.")
long <- raw %>%
gather(question, response, opening.satisfaction:thanks.comments) %>%
separate(long, question, c("section","question", sep = "\\.")
long <- raw %>%
gather(question, response, opening.satisfaction:thanks.comments) %>%
separate(long, question, c("section","question"), sep = "\\.")
long <- raw %>%
gather(question, response, opening.satisfaction:thanks.comments) %>%
separate(long, question, c("section","quest"), sep = "\\.")
long <- raw %>%
gather(question, response, opening.satisfaction:thanks.comments) %>%
separate(question, c("section","quest"), sep = "\\.")
dim(long)
long <- raw %>%
gather(question, response, opening.satisfaction:thanks.comments) %>%
separate(question, c("section","quest", "other"), sep = "\\.")
table(question)
table(long$question)
head(long)
source('C:/Dropbox (UP)/UP-Data Evaluation/Modules/Tableau/run R files.R', echo=TRUE)
source('C:/Dropbox (UP)/UP-Data Evaluation/Modules/Tableau/run R files.R', echo=TRUE)
updateR()
require(installr)
updateR()
install.packages("manipulate")
require(dplyr)
install.packages("dplyr")
install.packages(tidyr)
install.packages("tidyr")
install.packages("stringr")
require(RSQLServer)
require(dplyr)
# Calculate the number of students enrolled in Boston by Grade
require(dplyr)
setwd('C:\Users\rknight\Documents\GitHub\ma-doe-data')
files <- list.files(path= "\data\enrollmentbygrade", pattern="school")
setwd('C:/Users/rknight/Documents/GitHub/ma-doe-data')
files <- list.files(path= "data/enrollmentbygrade", pattern="school")
all <- NULL
for (file in files) {
raw <- read.csv(file)
parts <- strsplit(file, " ")
year <- parts[[1]][3]
raw$year <- year
all <- rbind(all, raw)
}
for (file in files) {
raw <- read.csv(paste('data/enrollmentbygrade/', file, sep = '/'))
parts <- strsplit(file, " ")
year <- parts[[1]][3]
raw$year <- year
all <- rbind(all, raw)
}
options(stringsAsFactors=F)
all <- NULL
for (file in files) {
raw <- read.csv(paste('data/enrollmentbygrade/', file, sep = '/'))
parts <- strsplit(file, " ")
year <- parts[[1]][3]
raw$year <- year
all <- rbind(all, raw)
}
all <- NULL
for (file in files) {
print(file)
raw <- read.csv(paste('data/enrollmentbygrade/', file, sep = '/'))
parts <- strsplit(file, " ")
year <- parts[[1]][3]
raw$year <- year
all <- rbind(all, raw)
}
names(raw)
all <- NULL
for (file in files) {
print(file)
raw <- read.csv(paste('data/enrollmentbygrade/', file, sep = '/'))
parts <- strsplit(file, " ")
year <- parts[[1]][3]
raw$year <- year
# There are two sets of columns
if ('UG' %in% names(raw)) {
raw$SP <- NULL
}
else {
raw$UG <- NULL
raw$X14 <- NULL
}
all <- rbind(all, raw)
}
names(raw)
names(all)
names(raw)
('UG' %in% names(raw))
head(rwa)
head(raw)
all <- NULL
for (file in files) {
print(file)
raw <- read.csv(paste('data/enrollmentbygrade/', file, sep = '/'))
parts <- strsplit(file, " ")
year <- parts[[1]][3]
raw$year <- year
# There are two sets of columns
if ('UG' %in% names(raw)) {
raw$SP <- NULL
}
else {
raw$UG <- NULL
raw$X14 <- NULL
}
all <- rbind(all, raw)
}
names(raw)
head(raw)
head(all)
if ('UG' %in% names(raw)) {
raw$SP <- NULL
}
names(raw)
if ('UG' %in% names(raw)) {
raw$SP <- NULL
}
else {
raw$UG <- NULL
raw$X14 <- NULL
}
if ('UG' %in% names(raw)) {
raw$SP <- NULL
}
else {
raw$UG <- NULL
raw$X14 <- NULL
}
if ('UG' %in% names(raw)) {
raw$SP <- NULL
}
else {
raw$UG <- NULL
raw$X14 <- NULL
}
if ('UG' %in% names(raw)) {
raw$SP <- NULL
}
else {
raw$UG <- NULL
raw$X14 <- NULL
}
all <- NULL
for (file in files) {
print(file)
raw <- read.csv(paste('data/enrollmentbygrade/', file, sep = '/'))
parts <- strsplit(file, " ")
year <- parts[[1]][3]
raw$year <- year
# There are two sets of columns
if ('UG' %in% names(raw)) {
raw$SP <- NULL
}  else {
raw$UG <- NULL
raw$X14 <- NULL
}
all <- rbind(all, raw)
}
names(raw)
names(all)
head(all)
if ('UG' %in% names(raw)) {
raw$SP <- NULL
}  else {
raw$UG <- NULL
raw$X14 <- NULL
}
names(raw)
('UG' %in% names(raw))
if ('UG' %in% names(raw)) {
raw$SP <- NULL
}  else {
raw$UG <- NULL
raw$X14 <- NULL
}
names(raw)
if ('UG' %in% names(raw)) {
raw$SP <- NULL
}  else {
print('else')
raw$UG <- NULL
raw$X14 <- NULL
}
if ('UG' %in% names(raw)) {
raw$SP <- NULL
}  else {
print('else')
raw <- mutuate(raw, UG = '', X14 = '')
}
if ('UG' %in% names(raw)) {
raw$SP <- NULL
}  else {
print('else')
raw <- mutate(raw, UG = '', X14 = '')
}
head(raw)
if ('UG' %in% names(raw)) {
raw$SP <- NULL
}  else {
print('else')
raw <- mutate(raw, UG = NULL, X14 = NULL)
}
head(raw)
all <- NULL
for (file in files) {
print(file)
raw <- read.csv(paste('data/enrollmentbygrade/', file, sep = '/'))
parts <- strsplit(file, " ")
year <- parts[[1]][3]
year <-substr(year, 1, nchar(year)-4) #remove the last 4 char (.csv)
raw$year <- year
# There are two sets of columns
if ('UG' %in% names(raw)) {
raw$SP <- NULL
}  else {
raw <- mutate(raw, UG = NULL, X14 = NULL)
}
all <- rbind(all, raw)
}
raw
head(raw)
all <- NULL
for (file in files) {
print(file)
raw <- read.csv(paste('data/enrollmentbygrade/', file, sep = '/'))
parts <- strsplit(file, " ")
year <- parts[[1]][3]
year <-substr(year, 1, nchar(year)-4) #remove the last 4 char (.csv)
raw$year <- year
# There are two sets of columns
if ('UG' %in% names(raw)) {
raw <- mutate(raw, SP = NULL)
}  else {
raw <- mutate(raw, UG = NULL, X14 = NULL)
}
all <- rbind(all, raw)
}
names(raw)
names(all)
all <- NULL
for (file in files) {
print(file)
raw <- read.csv(paste('data/enrollmentbygrade/', file, sep = '/'))
parts <- strsplit(file, " ")
year <- parts[[1]][3]
year <-substr(year, 1, nchar(year)-4) #remove the last 4 char (.csv)
raw$year <- year
# There are two sets of columns
if ('UG' %in% names(raw)) {
raw <- mutate(raw, SP = NA)
}  else {
raw <- mutate(raw, UG = NA, X14 = NA)
}
all <- rbind(all, raw)
}
names(raw)
names(all)
all <- NULL
for (file in files) {
print(file)
raw <- read.csv(paste('data/enrollmentbygrade/', file, sep = '/'))
parts <- strsplit(file, " ")
year <- parts[[1]][3]
year <-substr(year, 1, nchar(year)-4) #remove the last 4 char (.csv)
raw$year <- year
# There are two sets of columns
if ('UG' %in% names(raw)) {
raw <- mutate(raw, SP = NA)
}  else {
raw <- mutate(raw, UG = NA, X13 = NA, X14 = NA)
}
all <- rbind(all, raw)
}
names(all)
require(tidyr)
names(long) <- tolower(names(long))
names(all) <- tolower(names(all))
names(all)
long <- gather(measure, value, -school, -org.code) %>%
filter(!(value %in% c("ug", "sp", "x13", "x14") )) %>%
mutate( grade = as.numeric(measure),
grade = ifelse(measure == "k", 0,
ifelse(measure == 'pk', -1, grade)))
long <- gather(measure, value, -school, -org.code) %>%
mutate( grade = as.numeric(measure),
grade = ifelse(measure == "k", 0,
ifelse(measure == 'pk', -1, grade)))
long <- all %>%
gather(measure, value, -school, -org.code) %>%
filter(!(value %in% c("ug", "sp", "x13", "x14") )) %>%
mutate( grade = as.numeric(measure),
grade = ifelse(measure == "k", 0,
ifelse(measure == 'pk', -1, grade)))
head(long)
long <- all %>%
gather(measure, value, -school, -org.code) %>%
filter( -(value %in% c("ug", "sp", "x13", "x14") )) %>%
mutate( grade = as.numeric(measure),
grade = ifelse(measure == "k", 0,
ifelse(measure == 'pk', -1, grade)))
long <- all %>%
gather(measure, value, -school, -org.code) %>%
filter( !(measure %in% c("ug", "sp", "x13", "x14") )) %>%
mutate( grade = as.numeric(measure),
grade = ifelse(measure == "k", 0,
ifelse(measure == 'pk', -1, grade)))
head(long)
locations <- read.csv('data/school addresses.csv')
zips <- read.csv('boston zip codes.csv')
zips <- read.csv('data/boston zip codes.csv')
head(locations)
require(stringr)
locations$zip <- as.numeric(str_sub(locations$address, -5))
names(zips)
locations$boston <- locations$zip %in% zips$zip
table(locations$boston)
